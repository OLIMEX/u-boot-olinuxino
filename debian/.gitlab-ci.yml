default:
  image: u-boot-olinuxino

variables:
  UBOOT_RELEASE: 'v2021.04'

stages:
  - source
  - binary
  - merge
  - deploy

package:source:
  artifacts:
    name: "$CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/*
    when: on_success
  before_script:
    - rm -vf ../u-boot-*olinuxino_* || true
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - sed -i "s/BUILD_DATE/$(date +%Y%m%d.%H%M%S)/g" debian/changelog
    - gbp export-orig --upstream-tree=$UBOOT_RELEASE
  script:
    - dpkg-buildpackage --post-clean -S -i -I
    - mkdir $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA
    - mv -vf ../u-boot-*olinuxino_*.* $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/
    - cp -v debian/changelog $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/
  stage: source

package:armhf:
  artifacts:
    name: "$CI_PROJECT_NAME-armhf.$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-armhf.$CI_COMMIT_SHORT_SHA/*
    when: on_success
  before_script:
    - rm -vf ../u-boot-*olinuxino_* || true
    - dpkg --add-architecture $ARCH
    - apt-get update && apt-get install -y --no-install-recommends lzop:armhf libc6:armhf
    - cp -v $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/u-boot-*olinuxino_*.orig.tar.gz ../
    - cp -v $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/changelog debian/changelog
    - rm -rvf $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA
    - export SOURCE_DATE_EPOCH=$(date +%s)
  needs:
    - "package:source"
  script:
    - touch .scmversion
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
    - mkdir $CI_PROJECT_NAME-armhf.$CI_COMMIT_SHORT_SHA
    - rm -vf ../u-boot-*olinuxino_*.orig.tar.gz
    - mv -vf ../u-boot-*olinuxino_*.* $CI_PROJECT_NAME-armhf.$CI_COMMIT_SHORT_SHA/
  stage: binary
  variables:
    ARCH: armhf

package:arm64:
  artifacts:
    name: "$CI_PROJECT_NAME-arm64.$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-arm64.$CI_COMMIT_SHORT_SHA/*
    when: on_success
  before_script:
    - rm -vf ../u-boot-*olinuxino_* || true
    - dpkg --add-architecture $ARCH
    - apt-get update && apt-get install -y --no-install-recommends wget
    - echo "deb http://repository.olimex.com buster main" > /etc/apt/sources.list.d/olimex.list
    - wget http://repository.olimex.com/public.key -O - | apt-key add -
    - apt-get update && apt-get install -y --no-install-recommends libc6:arm64 arm-trusted-firmware:arm64
    - cp -v $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/u-boot-*olinuxino_*.orig.tar.gz ../
    - cp -v $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA/changelog debian/changelog
    - rm -rvf $CI_PROJECT_NAME-source.$CI_COMMIT_SHORT_SHA
    - export SOURCE_DATE_EPOCH=$(date +%s)
  needs:
    - "package:source"
  script:
    - touch .scmversion
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
    - mkdir $CI_PROJECT_NAME-arm64.$CI_COMMIT_SHORT_SHA
    - rm -vf ../u-boot-*olinuxino_*.orig.tar.gz
    - mv -vf ../u-boot-*olinuxino_*.* $CI_PROJECT_NAME-arm64.$CI_COMMIT_SHORT_SHA/
  stage: binary
  variables:
    ARCH: arm64
    BL31: /usr/lib/arm-trusted-firmware/sun50i_a64/bl31.bin

package:merge:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
  script:
    - mkdir $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
    - cp -vf $CI_PROJECT_NAME-*.$CI_COMMIT_SHORT_SHA/* $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/
    - mergechanges -f $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*.changes
  stage: merge

deploy:staging:
  script:
    - |
      for repo in $REPOS ; do
        reprepro -b /var/www/html/staging --ignore=wrongdistribution include $repo $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
      done
  stage: deploy
  tags:
    - deploy
  when: manual

deploy:repository:
  only:
    - /^release-.*$/
  script:
    - |
      for repo in $REPOS ; do
        reprepro -b /var/www/html/repository --ignore=wrongdistribution include $repo $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
      done
  stage: deploy
  tags:
    - deploy
  when: manual
